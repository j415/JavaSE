/*
   A:案例演示
     * 数组高级冒泡排序代码
 */
package com.heima.array;

public class Demo2_1_Array {
    public static void main(String[] args) {
        int[] arr = {12, 34, 56, 78, 90};
        bubbleSort(arr);
        selectSort(arr);

    }

    /*
	 * 冒泡排序
	 * 1,返回值类型,void
	 * 2,参数列表,int[] arr
	 *
	 * 	第一次:arr[0]与arr[1],arr[1]与arr[2],arr[2]与arr[3],arr[3]与arr[4]比较4次
		第二次:arr[0]与arr[1],arr[1]与arr[2],arr[2]与arr[3]比较3次
		第三次:arr[0]与arr[1],arr[1]与arr[2]比较2次
		第四次:arr[0]与arr[1]比较1次
	 */
    public static void bubbleSort(int[] arr) {
        for (int i = 0; i < arr.length - 1; i++) {              // 外循环只需要比较arr.length-1次即可
            for (int j = 0; j < arr.length - i-1; j++) {        // - 1 是为了防止索引越界，- i是为了提高效率
                if (arr[j] > arr[j + 1]) {
                    /*int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;*/
                    swap(arr,j,j+1);
                }
            }
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void selectSort(int[] arr){
        for (int i = 0; i < arr.length-1; i++) {
            for (int j = i+1; j < arr.length; j++) {
                if (arr[i]>arr[j]){
                    /*int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;*/
                    swap(arr,i,j);
                }
            }
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    /*
     * 换位操作
     * 1,返回值类型,void
     * 2,参数列表int[] arr.int i,int j
     *
     * 如果某个方法,只针对本类使用,不想让其他类使用就可以定义成私有的
     */

    private static void swap(int[] arr,int i,int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}
